/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vistas;

import java.awt.event.KeyEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import org.mariadb.jdbc.Connection;
import singleton.Singleton;

/**
 *
 * @author Santiago Alzate
 */
public class VentanaCrudProducto extends javax.swing.JFrame {

//    DefaultTableModel modelo = new DefaultTableModel();
    public VentanaCrudProducto() {
        initComponents();
        this.setLocationRelativeTo(this);
        llenarComboBox();
        llenartabla();

//        Fabricante cb = new Fabricante();
//        DefaultComboBoxModel modeloCombo = new DefaultComboBoxModel(cb.fabricantes());
//        comboBoxRegistro.setModel(modeloCombo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaProductos = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtNombreProducto = new javax.swing.JTextField();
        txtCreacion = new javax.swing.JTextField();
        txtPrecio = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        comboBoxRegistro = new javax.swing.JComboBox();
        btnAgregar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnRegresar = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(" PRODUCTOS"));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tablaProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "codigo", "nombre", "precio", "creacion", "fabricante"
            }
        ));
        tablaProductos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaProductosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaProductos);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 625, 208));

        jLabel2.setText("PRECIO");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 365, -1, 17));

        jLabel3.setText("NOMBRE DE PRODUCTO");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 314, -1, -1));
        jPanel1.add(txtNombreProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 337, 131, -1));
        jPanel1.add(txtCreacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(219, 279, 131, -1));

        txtPrecio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPrecioKeyTyped(evt);
            }
        });
        jPanel1.add(txtPrecio, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 400, 131, -1));

        jLabel4.setText("CODIGO");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 256, -1, -1));

        jLabel5.setText("CREACION");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(219, 256, -1, 17));

        txtCodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCodigoKeyTyped(evt);
            }
        });
        jPanel1.add(txtCodigo, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 279, 131, -1));

        jLabel6.setText("ELIJA UN FABRICANTE");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(219, 314, -1, 17));

        jPanel1.add(comboBoxRegistro, new org.netbeans.lib.awtextra.AbsoluteConstraints(219, 337, 208, -1));

        btnAgregar.setText("AGREGAR");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });
        jPanel1.add(btnAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(468, 279, 100, -1));

        btnEditar.setText("EDITAR");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        jPanel1.add(btnEditar, new org.netbeans.lib.awtextra.AbsoluteConstraints(467, 318, 100, -1));

        btnEliminar.setText("ELIMINAR");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        jPanel1.add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(467, 359, 100, -1));

        btnRegresar.setBackground(new java.awt.Color(102, 255, 0));
        btnRegresar.setText("REGRESAR");
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });
        jPanel1.add(btnRegresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 430, -1, -1));

        btnBuscar.setText("BUSCAR POR FABRICANTE");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        jPanel1.add(btnBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 430, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 701, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 468, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        if (txtCodigo.getText().isEmpty() || txtNombreProducto.getText().isEmpty() || txtPrecio.getText().isEmpty()
                || txtCreacion.getText().isEmpty() || comboBoxRegistro.getSelectedIndex() == 0) {

            JOptionPane.showMessageDialog(null, "Llene todo los campos para hacer"
                    + " un registro exitoso");

            return;

        }

        PreparedStatement ps = null;
        try {
            Singleton objCon = Singleton.getInstancia();
            Connection conn = objCon.getConnection();
            ps = conn.prepareStatement("INSERT INTO producto (codigo, nombre, precio, creacion, fabricanteproducto) VALUES (?,?,?,?,?)");
            ps.setString(1, txtCodigo.getText());
            ps.setString(2, txtNombreProducto.getText());
            ps.setString(3, txtPrecio.getText());
            ps.setString(4, txtCreacion.getText());

            ps.setString(5, comboBoxRegistro.getSelectedItem().toString().split("-")[0]);

            ps.execute();

            JOptionPane.showMessageDialog(null, "Producto registrado");

            llenartabla();
            limpiarCampos();

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al registro ");
            System.out.println(ex);
        }
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void tablaProductosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaProductosMouseClicked
        PreparedStatement ps = null;
        ResultSet rs = null;
        try {
            Singleton objCon = Singleton.getInstancia();
            Connection conn = objCon.getConnection();

            int Fila = tablaProductos.getSelectedRow();
            String codigo = tablaProductos.getValueAt(Fila, 0).toString();

            ps = conn.prepareStatement("SELECT codigo, nombre , precio, creacion,fabricanteproducto FROM producto  WHERE codigo=?");
            ps.setString(1, codigo);
            rs = ps.executeQuery();

            while (rs.next()) {
                txtCodigo.setText(rs.getString("codigo"));
                txtNombreProducto.setText(rs.getString("nombre"));
                txtPrecio.setText(rs.getString("precio"));
                txtCreacion.setText(rs.getString("creacion"));
                comboBoxRegistro.setSelectedItem(rs.getString("fabricanteproducto").toString());

            }
        } catch (SQLException ex) {
            System.out.println(ex.toString());
        }

    }//GEN-LAST:event_tablaProductosMouseClicked

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        PreparedStatement ps = null;
        try {

            Singleton objCon = Singleton.getInstancia();
           Connection conn = objCon.getConnection();

            int Fila = tablaProductos.getSelectedRow();
            String codigo = tablaProductos.getValueAt(Fila, 0).toString();

            ps = conn.prepareStatement("DELETE FROM producto WHERE codigo=?");
            ps.setString(1, codigo);
            ps.execute();

            llenartabla();
            JOptionPane.showMessageDialog(null, "Producto Eliminado");
            limpiarCampos();

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al Eliminar ");
            System.out.println(ex.toString());
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        VentanaPrincipal newframe = new VentanaPrincipal();
        newframe.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        VentanaFiltrarProducto newframe = new VentanaFiltrarProducto();
        newframe.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed

        if (comboBoxRegistro.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Eliga un fabricante por favor");
        }
        int Fila = tablaProductos.getSelectedRow();
        PreparedStatement ps = null;

        try {
            Singleton objCon = Singleton.getInstancia();
           Connection conn = objCon.getConnection();
            ps = conn.prepareStatement("UPDATE producto SET  codigo=?, nombre=?, precio=?, creacion=? ,fabricanteproducto=? WHERE codigo=?");

            ps.setString(1, txtCodigo.getText());
            ps.setString(2, txtNombreProducto.getText());
            ps.setString(3, txtPrecio.getText());
            ps.setString(4, txtCreacion.getText());
            ps.setString(5, comboBoxRegistro.getSelectedItem().toString().split("-")[0]);
            ps.setString(6, txtCodigo.getText());

            ps.execute();

            JOptionPane.showMessageDialog(null, "Fabricante editado");

            llenartabla();
            limpiarCampos();

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al editar el fabricante");
            System.out.println(ex);
        }


    }//GEN-LAST:event_btnEditarActionPerformed

    private void txtCodigoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoKeyTyped
        char keyChar = evt.getKeyChar();
        if (!(Character.isDigit(keyChar) && !(keyChar == KeyEvent.VK_DELETE))) {
            evt.consume();
            JOptionPane.showMessageDialog(null, "Ingrese solo numeros en el codigo");
        }
    }//GEN-LAST:event_txtCodigoKeyTyped

    private void txtPrecioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrecioKeyTyped
        char keyChar = evt.getKeyChar();
        if (!(Character.isDigit(keyChar) && !(keyChar == KeyEvent.VK_DELETE))) {
            evt.consume();
            JOptionPane.showMessageDialog(null, "Ingrese solo numeros en el precio");
        }

    }//GEN-LAST:event_txtPrecioKeyTyped

    public void llenarComboBox() {

        PreparedStatement ps = null;
        ResultSet rs = null;
        Singleton objCon = Singleton.getInstancia();
       Connection conn = objCon.getConnection();
        try {
            String sql = "select codigo,nombre From fabricante";
            ps = conn.prepareStatement(sql);
            rs = ps.executeQuery();
            comboBoxRegistro.addItem("seleccione un fabricante");
            while (rs.next()) {
                comboBoxRegistro.addItem(rs.getString("codigo") + "-" + rs.getString("nombre"));
//               comboBoxRegistro.addItem(rs.getString("nombre"));
            }

        } catch (SQLException e) {
            System.out.println(e.toString());
        }

    }

    public void llenartabla() {
        try {
            DefaultTableModel modelo = new DefaultTableModel();
            tablaProductos.setModel(modelo);
            PreparedStatement ps = null;
            ResultSet rs = null;
            Singleton objCon = Singleton.getInstancia();
            Connection conn = objCon.getConnection();
            
            String sql = "SELECT producto.codigo, producto.nombre,producto.precio,producto.creacion, fabricante.nombre FROM producto inner join fabricante on fabricanteproducto = fabricante.codigo";
            ps = conn.prepareStatement(sql);
            rs = ps.executeQuery();

            ResultSetMetaData rsMd = (ResultSetMetaData) rs.getMetaData();
            int cantidadColumnas = rsMd.getColumnCount();

            modelo.addColumn("codigo");
            modelo.addColumn("nombre");
            modelo.addColumn("precio");
            modelo.addColumn("creacion");
            modelo.addColumn("fabricante");

            int[] anchos = {40, 100, 50, 50, 50};
            for (int i = 0; i < tablaProductos.getColumnCount(); i++) {
                tablaProductos.getColumnModel().getColumn(i).setPreferredWidth(anchos[i]);
            }

            while (rs.next()) {
                Object[] filas = new Object[cantidadColumnas];
                for (int i = 0; i < cantidadColumnas; i++) {
                    filas[i] = rs.getObject(i + 1);
                }
                modelo.addRow(filas);
            }

        } catch (SQLException ex) {
            System.err.println(ex.toString());
        }
    }

    public void limpiarCampos() {
        txtCodigo.setText("");
        txtNombreProducto.setText("");
        txtPrecio.setText("");
        txtCreacion.setText("");
        comboBoxRegistro.setSelectedIndex(0);

    }

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(VentanaCrudProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(VentanaCrudProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(VentanaCrudProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(VentanaCrudProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new VentanaCrudProducto().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnRegresar;
    private javax.swing.JComboBox comboBoxRegistro;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaProductos;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtCreacion;
    private javax.swing.JTextField txtNombreProducto;
    private javax.swing.JTextField txtPrecio;
    // End of variables declaration//GEN-END:variables
}
